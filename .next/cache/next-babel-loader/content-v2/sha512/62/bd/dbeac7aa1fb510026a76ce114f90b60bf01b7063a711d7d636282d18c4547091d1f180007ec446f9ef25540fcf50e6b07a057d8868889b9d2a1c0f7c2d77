{"ast":null,"code":"// //api/new-meetup\n// import { MongoClient } from \"mongodb\";\n// export default async function handler(req, res) {\n// \t// if (req.method === \"POST\") {\n// \t//if (req.method) {\n// \t// const data = req.body;\n// \tconsole.log(data);\n// \t// const { address, title, description, image } = data;\n// \ttry {\n// \t\t// const client = await MongoClient.connect(\n// \t\t// \t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t\t// );\n// \t\t// const db = client.db();\n// \t\t// const meetupsCollection = db.collection(\"meetups\");\n// \t\t// const result = await meetupsCollection.insertOne(data);\n// \t\t// console.log(result);\n// \t\t// client.close();\n// \t\tres.status(201).json({ message: \"Meetup Inserted\" });\n// \t} catch (err) {\n// \t\tres.json({ message: \"Error\" });\n// \t}\n// \t//}\n// }\nexport default async function handler(req, res) {\n  const client = await MongoClient.connect(\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const result = await meetupsCollection.insertOne(data);\n  console.log(result);\n  client.close();\n  res.status(201).json({\n    message: \"Meetup Inserted\"\n  });\n  res.status(200).json({\n    text: \"Hello\"\n  });\n}","map":{"version":3,"sources":["/home/lcom/Documents/tutorials/React - The Complete Guide (incl Hooks, React Router, Redux)/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["handler","req","res","client","MongoClient","connect","db","meetupsCollection","collection","result","insertOne","data","console","log","close","status","json","message","text"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,eAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/C,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CACpB,8GADoB,CAArB;AAGA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BC,IAA5B,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEAN,EAAAA,MAAM,CAACW,KAAP;AAEAZ,EAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACAf,EAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAArB;AACA","sourcesContent":["// //api/new-meetup\n// import { MongoClient } from \"mongodb\";\n\n// export default async function handler(req, res) {\n// \t// if (req.method === \"POST\") {\n// \t//if (req.method) {\n// \t// const data = req.body;\n// \tconsole.log(data);\n\n// \t// const { address, title, description, image } = data;\n\n// \ttry {\n// \t\t// const client = await MongoClient.connect(\n// \t\t// \t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t\t// );\n// \t\t// const db = client.db();\n\n// \t\t// const meetupsCollection = db.collection(\"meetups\");\n\n// \t\t// const result = await meetupsCollection.insertOne(data);\n\n// \t\t// console.log(result);\n\n// \t\t// client.close();\n\n// \t\tres.status(201).json({ message: \"Meetup Inserted\" });\n// \t} catch (err) {\n// \t\tres.json({ message: \"Error\" });\n// \t}\n// \t//}\n// }\n\nexport default async function handler(req, res) {\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst result = await meetupsCollection.insertOne(data);\n\n\tconsole.log(result);\n\n\tclient.close();\n\n\tres.status(201).json({ message: \"Meetup Inserted\" });\n\tres.status(200).json({ text: \"Hello\" });\n}\n"]},"metadata":{},"sourceType":"module"}