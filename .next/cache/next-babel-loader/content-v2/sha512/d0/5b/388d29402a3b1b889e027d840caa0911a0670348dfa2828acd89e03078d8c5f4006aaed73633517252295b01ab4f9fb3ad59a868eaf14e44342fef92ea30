{"ast":null,"code":"import { MongoClient } from \"mongodb\"; // /api/new-meetup\n// POST /api/new-meetup\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const client = await MongoClient.connect(\"mongodb+srv://maximilian:arlAapzPqFyo4xUk@cluster0.ntrwp.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: \"Meetup inserted!\"\n    });\n  }\n}\n\nexport default handler; // //api/new-meetup\n// import { MongoClient } from \"mongodb\";\n// async function handler(req, res) {\n// \tif (req.method === \"POST\") {\n// \t\tconst data = req.body;\n// \t\tconsole.log(data);\n// \t\t// const { address, title, description, image } = data;\n// \t\ttry {\n// \t\t\tconst client = await MongoClient.connect(\n// \t\t\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t\t\t);\n// \t\t\tconst db = client.db();\n// \t\t\tconst meetupsCollection = db.collection(\"meetups\");\n// \t\t\tconst result = await meetupsCollection.insertOne(data);\n// \t\t\tconsole.log(result);\n// \t\t\tclient.close();\n// \t\t\treturn res.status(201).json({ message: \"Meetup Inserted\" });\n// \t\t} catch (err) {\n// \t\t\treturn res.json({ message: \"Error\" });\n// \t\t}\n// \t}\n// }\n// export default handler;","map":{"version":3,"sources":["/home/lcom/Documents/tutorials/React - The Complete Guide (incl Hooks, React Router, Redux)/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AACA;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAChC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AAC1B,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACpB,0GADoB,CAArB;AAGA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAL,IAAAA,MAAM,CAACS,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,eAAelB,OAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { MongoClient } from \"mongodb\";\n\n// /api/new-meetup\n// POST /api/new-meetup\n\nasync function handler(req, res) {\n\tif (req.method === \"POST\") {\n\t\tconst data = req.body;\n\n\t\tconst client = await MongoClient.connect(\n\t\t\t\"mongodb+srv://maximilian:arlAapzPqFyo4xUk@cluster0.ntrwp.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t\t);\n\t\tconst db = client.db();\n\n\t\tconst meetupsCollection = db.collection(\"meetups\");\n\n\t\tconst result = await meetupsCollection.insertOne(data);\n\n\t\tconsole.log(result);\n\n\t\tclient.close();\n\n\t\tres.status(201).json({ message: \"Meetup inserted!\" });\n\t}\n}\n\nexport default handler;\n\n// //api/new-meetup\n// import { MongoClient } from \"mongodb\";\n\n// async function handler(req, res) {\n// \tif (req.method === \"POST\") {\n// \t\tconst data = req.body;\n// \t\tconsole.log(data);\n\n// \t\t// const { address, title, description, image } = data;\n\n// \t\ttry {\n// \t\t\tconst client = await MongoClient.connect(\n// \t\t\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t\t\t);\n// \t\t\tconst db = client.db();\n\n// \t\t\tconst meetupsCollection = db.collection(\"meetups\");\n\n// \t\t\tconst result = await meetupsCollection.insertOne(data);\n\n// \t\t\tconsole.log(result);\n\n// \t\t\tclient.close();\n\n// \t\t\treturn res.status(201).json({ message: \"Meetup Inserted\" });\n// \t\t} catch (err) {\n// \t\t\treturn res.json({ message: \"Error\" });\n// \t\t}\n// \t}\n// }\n\n// export default handler;\n"]},"metadata":{},"sourceType":"module"}