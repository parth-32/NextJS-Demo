{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lcom/Documents/tutorials/React - The Complete Guide (incl Hooks, React Router, Redux)/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail.js\";\n\nvar MeetupDetailPage = function MeetupDetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.meetupData.id,\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["/home/lcom/Documents/tutorials/React - The Complete Guide (incl Hooks, React Router, Redux)/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID]/index.js"],"names":["MeetupDetail","MeetupDetailPage","props","meetupData","id","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,0CAAzB;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AACnC,sBACC,QAAC,YAAD;AACC,IAAA,EAAE,EAAEA,KAAK,CAACC,UAAN,CAAiBC,EADtB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAHzB;AAIC,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAJ3B;AAKC,IAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBK;AAL/B;AAAA;AAAA;AAAA;AAAA,WADD;AASA,CAVD;;KAAMP,gB;;AA8DN,eAAeA,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetailPage = (props) => {\n\treturn (\n\t\t<MeetupDetail\n\t\t\tid={props.meetupData.id}\n\t\t\ttitle={props.meetupData.title}\n\t\t\timage={props.meetupData.image}\n\t\t\taddress={props.meetupData.address}\n\t\t\tdescription={props.meetupData.description}\n\t\t/>\n\t);\n};\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupID: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupID;\n\n\tconst client = await MongoClient.connect(\n\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t});\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\taddress: selectedMeetup.address,\n\t\t\t\timage: selectedMeetup.image,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}