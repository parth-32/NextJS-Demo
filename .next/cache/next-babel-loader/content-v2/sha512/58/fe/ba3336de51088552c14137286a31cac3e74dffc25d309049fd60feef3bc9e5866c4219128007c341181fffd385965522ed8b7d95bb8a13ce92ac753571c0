{"ast":null,"code":"// //api/new-meetup\nimport { MongoClient } from \"mongodb\";\nexport default async function handler(req, res) {\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body; // console.log(data);\n\n      const client = await MongoClient.connect(\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/meetups?retryWrites=true&w=majority\");\n      const db = client.db();\n      const meetupsCollection = db.collection(\"meetups\");\n      const result = await meetupsCollection.insertOne(data); // console.log(result);\n\n      client.close();\n      res.status(201).json({\n        message: \"Meetup Inserted\"\n      });\n    } catch (e) {\n      console.log(\"=========================================================\\n\");\n      res.json({\n        message: e.message,\n        stack: e.stack\n      });\n    }\n  }\n} // const data = req.body;\n// \tconsole.log(data);\n// \tconst client = await new MongoClient.connect(\n// \t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t);\n// \tconst db = client.db();\n// \tconst meetupsCollection = db.collection(\"meetups\");\n// \tconst result = await meetupsCollection.insertOne(data);\n// \tconsole.log(result);\n// \tclient.close();\n// \tres.status(201).json({ message: \"Meetup Inserted\" });\n// res.status(200).json({ text: \"Hello\" });","map":{"version":3,"sources":["/home/lcom/Documents/tutorials/React - The Complete Guide (incl Hooks, React Router, Redux)/23 A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","close","status","json","message","e","console","log","stack"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/C,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AAC1B,QAAI;AACH,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADG,CAEH;;AAEA,YAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACpB,sGADoB,CAArB;AAGA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,YAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB,CAXG,CAaH;;AAEAE,MAAAA,MAAM,CAACO,KAAP;AAEAX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA,KAlBD,CAkBE,OAAOC,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CACC,6DADD;AAGAjB,MAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEC,QAAAA,OAAO,EAAEC,CAAC,CAACD,OAAb;AAAsBI,QAAAA,KAAK,EAAEH,CAAC,CAACG;AAA/B,OAAT;AACA;AACD;AACD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA","sourcesContent":["// //api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nexport default async function handler(req, res) {\n\tif (req.method === \"POST\") {\n\t\ttry {\n\t\t\tconst data = req.body;\n\t\t\t// console.log(data);\n\n\t\t\tconst client = await MongoClient.connect(\n\t\t\t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/meetups?retryWrites=true&w=majority\"\n\t\t\t);\n\t\t\tconst db = client.db();\n\n\t\t\tconst meetupsCollection = db.collection(\"meetups\");\n\n\t\t\tconst result = await meetupsCollection.insertOne(data);\n\n\t\t\t// console.log(result);\n\n\t\t\tclient.close();\n\n\t\t\tres.status(201).json({ message: \"Meetup Inserted\" });\n\t\t} catch (e) {\n\t\t\tconsole.log(\n\t\t\t\t\"=========================================================\\n\"\n\t\t\t);\n\t\t\tres.json({ message: e.message, stack: e.stack });\n\t\t}\n\t}\n}\n\n// const data = req.body;\n// \tconsole.log(data);\n\n// \tconst client = await new MongoClient.connect(\n// \t\t\"mongodb+srv://tester:utrcl957KUsBKFp4@cluster0.yywlt.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n// \t);\n// \tconst db = client.db();\n\n// \tconst meetupsCollection = db.collection(\"meetups\");\n\n// \tconst result = await meetupsCollection.insertOne(data);\n\n// \tconsole.log(result);\n\n// \tclient.close();\n\n// \tres.status(201).json({ message: \"Meetup Inserted\" });\n// res.status(200).json({ text: \"Hello\" });\n"]},"metadata":{},"sourceType":"module"}